#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'ranking_types'

module API
  module Ranking
    class Client
      include ::Thrift::Client

      def rank_hand(cards)
        send_rank_hand(cards)
        return recv_rank_hand()
      end

      def send_rank_hand(cards)
        send_message('rank_hand', Rank_hand_args, :cards => cards)
      end

      def recv_rank_hand()
        result = receive_message(Rank_hand_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'rank_hand failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_rank_hand(seqid, iprot, oprot)
        args = read_args(iprot, Rank_hand_args)
        result = Rank_hand_result.new()
        result.success = @handler.rank_hand(args.cards)
        write_result(result, oprot, 'rank_hand', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Rank_hand_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CARDS = 1

      FIELDS = {
        CARDS => {:type => ::Thrift::Types::LIST, :name => 'cards', :element => {:type => ::Thrift::Types::STRUCT, :class => ::API::Card}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Rank_hand_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::API::HandDescriptor}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
