#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'croupier_types'

module API
  module Croupier
    class Client
      include ::Thrift::Client

      def register_player(address)
        send_register_player(address)
        recv_register_player()
      end

      def send_register_player(address)
        send_message('register_player', Register_player_args, :address => address)
      end

      def recv_register_player()
        result = receive_message(Register_player_result)
        return
      end

      def start_sit_and_go()
        send_start_sit_and_go()
        recv_start_sit_and_go()
      end

      def send_start_sit_and_go()
        send_message('start_sit_and_go', Start_sit_and_go_args)
      end

      def recv_start_sit_and_go()
        result = receive_message(Start_sit_and_go_result)
        return
      end

      def shutdown()
        send_shutdown()
      end

      def send_shutdown()
        send_message('shutdown', Shutdown_args)
      end
    end

    class Processor
      include ::Thrift::Processor

      def process_register_player(seqid, iprot, oprot)
        args = read_args(iprot, Register_player_args)
        result = Register_player_result.new()
        @handler.register_player(args.address)
        write_result(result, oprot, 'register_player', seqid)
      end

      def process_start_sit_and_go(seqid, iprot, oprot)
        args = read_args(iprot, Start_sit_and_go_args)
        result = Start_sit_and_go_result.new()
        @handler.start_sit_and_go()
        write_result(result, oprot, 'start_sit_and_go', seqid)
      end

      def process_shutdown(seqid, iprot, oprot)
        args = read_args(iprot, Shutdown_args)
        @handler.shutdown()
        return
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Register_player_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ADDRESS = 1

      FIELDS = {
        ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Register_player_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Start_sit_and_go_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Start_sit_and_go_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Shutdown_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Shutdown_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
